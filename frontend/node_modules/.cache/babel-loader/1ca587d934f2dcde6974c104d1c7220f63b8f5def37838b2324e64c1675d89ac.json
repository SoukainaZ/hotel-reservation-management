{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useReservation.js\nimport { useState } from \"react\";\nexport const useReservation = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    clientName: \"\",\n    email: \"\",\n    phone: \"\",\n    roomType: \"simple\",\n    startDate: \"\",\n    endDate: \"\",\n    preferences: \"\",\n    amenities: []\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Ici vous ajouterez l'appel API\n      console.log(\"Données soumises:\", formData);\n      // Réinitialiser le formulaire après soumission\n      setFormData({\n        clientName: \"\",\n        email: \"\",\n        phone: \"\",\n        roomType: \"simple\",\n        startDate: \"\",\n        endDate: \"\",\n        preferences: \"\",\n        amenities: []\n      });\n    } catch (error) {\n      console.error(\"Erreur lors de la soumission:\", error);\n    }\n  };\n  return {\n    formData,\n    handleInputChange,\n    handleSubmit\n  };\n};\n_s(useReservation, \"Tczxq38KWSV/1KKXngJJylWOUzk=\");","map":{"version":3,"names":["useState","useReservation","_s","formData","setFormData","clientName","email","phone","roomType","startDate","endDate","preferences","amenities","handleInputChange","e","name","value","target","prev","handleSubmit","preventDefault","console","log","error"],"sources":["/Users/soukaina/hotel-reservation-system/src/hooks/useReservation.js"],"sourcesContent":["// src/hooks/useReservation.js\nimport { useState } from \"react\";\n\nexport const useReservation = () => {\n  const [formData, setFormData] = useState({\n    clientName: \"\",\n    email: \"\",\n    phone: \"\",\n    roomType: \"simple\",\n    startDate: \"\",\n    endDate: \"\",\n    preferences: \"\",\n    amenities: [],\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Ici vous ajouterez l'appel API\n      console.log(\"Données soumises:\", formData);\n      // Réinitialiser le formulaire après soumission\n      setFormData({\n        clientName: \"\",\n        email: \"\",\n        phone: \"\",\n        roomType: \"simple\",\n        startDate: \"\",\n        endDate: \"\",\n        preferences: \"\",\n        amenities: [],\n      });\n    } catch (error) {\n      console.error(\"Erreur lors de la soumission:\", error);\n    }\n  };\n\n  return {\n    formData,\n    handleInputChange,\n    handleSubmit,\n  };\n};\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC;IACvCK,UAAU,EAAE,EAAE;IACdC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,QAAQ;IAClBC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCb,WAAW,CAAEc,IAAI,KAAM;MACrB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEnB,QAAQ,CAAC;MAC1C;MACAC,WAAW,CAAC;QACVC,UAAU,EAAE,EAAE;QACdC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE,QAAQ;QAClBC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE,EAAE;QACXC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,OAAO;IACLpB,QAAQ;IACRU,iBAAiB;IACjBM;EACF,CAAC;AACH,CAAC;AAACjB,EAAA,CA9CWD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}